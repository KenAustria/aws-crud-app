# https://medium.com/@jeffreyrussom/react-continuous-deployments-with-aws-codepipeline-f5034129ff0e
version: 0.1
phases:
  pre_build:
    commands:
      - echo Installing source NPM dependencies.
      - npm install
  build:
    commands:
      - echo Running unit tests.
      - npm run test --watch=all
      - echo Build started on `date`.
      - npm run build
  post_build:
    commands:
      # Copy contents of /build to S3.
      - aws s3 cp --recursive --acl public-read ./build s3://aws-crud-app/
      # Set the cache-control headers for service-worker.js to prevent browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/service-worker.js s3://aws-crud-app/
      # Set the cache-control headers for index.html to prevent browser caching
      - >
        aws s3 cp --acl public-read
        --cache-control="max-age=0, no-cache, no-store, must-revalidate"
        ./build/index.html s3://aws-crud-app/
      # Invalidate the CloudFront cache for index.html and service-worker.js to force CloudFront to update its edge locations with the new versions
      # - >
      #   aws cloudfront create-invalidation --distribution-id ${Distribution}
      #   --paths /index.html /service-worker.js
artifacts:
  files:
    - '**/*'
  base-directory: build
